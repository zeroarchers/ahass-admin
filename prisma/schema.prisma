// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

model SparePart {
  id                 Int       @id @default(autoincrement())
  kodeSparepart      String    @unique
  aktif              Boolean
  namaSparepart      String
  namaLokalSparepart String?
  grupSparepart      String
  hargaLokal         Int
  hargaNasional      Int?
  uom                String
  grupKodeAHM        String?
  SparepartPKB       SparepartPKB[]
  Stock              Stock[]
  BAG    BAG[]
}

model Stock {
  id            Int       @id @default(autoincrement())
  kodeSparepart String
  quantity      Int
  updatedAt     DateTime  @updatedAt
  SparePart     SparePart  @relation(fields: [kodeSparepart], references: [kodeSparepart])
}

model BAG {
  id            String    @id
  kodeSparepart String
  isIncoming   Boolean
  quantity      Int
  tanggal    DateTime
  SparePart     SparePart  @relation(fields: [kodeSparepart], references: [kodeSparepart])
}

model Jasa {
  kode              String @id
  nama              String
  jobType           String
  jobTypeDesc       String
  kategoriPekerjaan String
  hargaJual         Int
  waktuKerja        Int
  satuanKerja       String
  catatan           String?
  statusAktif       Boolean
  JasaPKB          JasaPKB[]
}


model Karyawan {
  id                  Int      @id @default(autoincrement())
  name                String
  alamat              String
  provinsi            String
  kabupaten           String
  kecamatan           String
  kelurahan           String
  kodepos             String
  notelp              String?
  nohp                String
  email               String?
  catatan             String?
  noktp               String
  tempat_lahir        String
  tanggal_lahir       DateTime?
  gender              String
  agama               String
  berlaku_hingga      DateTime?
  status_kawin        String?
  status_kebangsaan   String?
  status_karyawan_tetap String?
  honda_id            String?
  tanggal_masuk       DateTime?
  tanggal_berhenti    DateTime?
  jabatan             String?
  level_training      String?
  status_pit          String?
  komisi_penjualan    String?
  gaji_pokok          Float?
  tunjangan_jabatan   Float?
  kesehatan           Float?
  transport           Float?
  uang_harian         Float?
}

model TipeKendaraanAHM {
  idTipeKendaraanAHM Int              @id
  kodeTipeKendaraanAHM String?
  TipeKendaraans     TipeKendaraan[]
}

model TipeKendaraan {
  id                  Int @id
  idTipeKendaraanAHM  Int
  tipe                String
  namaTipe            String
  cc                  Int
  model               String
  commercialName      String?
  aktif               Boolean
  TipeKendaraanAHM    TipeKendaraanAHM @relation(fields: [idTipeKendaraanAHM], references: [idTipeKendaraanAHM])
}


model Customer {
  id                  Int      @id @default(autoincrement())
  kode                String   @unique
  status              Boolean
  title               String
  nama                String
  noktp               String
  pekerjaan           String?
  agama               String?
  tanggal_lahir       DateTime?
  nopassport          String?

  alamat              String
  provinsi            String
  kabupaten           String
  kecamatan           String
  kelurahan           String
  kodepos             String?
  notelp              String
  nohp                String
  
  email               String?
  catatan             String?

  nohpKontakPerson    String?
  notelpKontakPerson  String?
  namaKontakPerson    String?

  alamatKirim         String?
  up                  String?
  notelpAlamatKirim   String?

  kendaraanAsCustomer Kendaraan[] @relation("CustomerAsCustomer")
  kendaraanAsPemilik  Kendaraan[] @relation("CustomerAsPemilik")
}

model Kendaraan {
    no_polisi           String @id
    customer Customer @relation(name: "CustomerAsCustomer", fields: [kode_customer], references: [kode])
    pemilik Customer @relation(name: "CustomerAsPemilik", fields: [kode_pemilik], references: [kode])
    statusAktif         Boolean
    kode_customer String
    kode_pemilik String
    namaTipeKendaraan String
    warna            String
    tahun_rakit String
    no_rangka   String
    no_mesin            String

    pkb PKB[]

  }

model PKB {
  id                       Int      @id @default(autoincrement())
  no_pkb                   String   @unique @db.VarChar(255)
  no_antrian               String
  status_pkb               String
  tanggal                  DateTime
  jam_kedatangan_customer  DateTime
  no_polisi                String
  tipe_antrian             String
  tipe_kedatangan          String
  activity_capacity        String
  pemilik                  String
  no_hp                    String
  no_mesin                 String
  tahun_motor              String
  indikator_bensin         Int[]
  pembawa                  String
  no_hp_pembawa            String
  no_ktp_pembawa           String
  alamat_ktp_pembawa       String
  alamat_domisili_pembawa  String
  kota_pembawa             String
  kecamatan_pembawa        String
  hubungan_pembawa         String
  alasan_ke_ahass          String
  dari_dealer_sendiri      Boolean
  part_bekas_dibawa        Boolean
  km_sekarang              Int
  km_berikutnya            Int
  gudang                   String
  no_stnk                  String
  customer_yang_datang     String
  keluhan                  String
  gejala                   String
  uang_muka                Int
  mekanik                  String
  service_advisor          String
  final_inspector          String
  estimasi_jam_selesai     DateTime
  konfirmasi_pergantian_part Boolean

  no_bayar                  String?
  uang_bayar                Int
  uang_kembalian            Int
  tipe_pembayaran           String
  tanggal_bayar             DateTime?

  kendaraan                Kendaraan @relation(fields: [no_polisi], references: [no_polisi])
  jasaPKB                  JasaPKB[]
  sparepartPKB             SparepartPKB[]
}

model JasaPKB {
  id                    Int      @id @default(autoincrement())
  pkb                   PKB      @relation(fields: [pkbId], references: [id], onDelete: Cascade)
  pkbId                 Int
  jasa                  Jasa     @relation(fields: [kode_jasa], references: [kode])
  kode_jasa             String
  total_harga_jasa      Float
  harga_jasa            Float
  nama_jasa             String
  tambahan_harga_jasa   Float
  persentase_diskon     Float
  opl                   String
}

model SparepartPKB {
  id                      Int       @id @default(autoincrement())
  pkb                     PKB       @relation(fields: [pkbId], references: [id], onDelete: Cascade)
  pkbId                   Int
  sparepart               SparePart @relation(fields: [kode_sparepart], references: [kodeSparepart])
  kode_sparepart          String
  total_harga_sparepart   Float
  harga_sparepart         Float
  tambahan_harga_sparepart Float
  persentase_diskon       Float
  quantity                Int
  nama_sparepart          String
  ref_jasa                String
}
